name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.25.x]
    
    env:
      GOEXPERIMENT: greenteagc

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: GOEXPERIMENT=greenteagc go mod download

    - name: Install code generation tools
      run: GOEXPERIMENT=greenteagc go install github.com/atombender/go-jsonschema@latest

    - name: Install formatting tools
      run: GOEXPERIMENT=greenteagc go install golang.org/x/tools/cmd/goimports@latest

    - name: Build
      run: make build

    - name: Run tests
      run: make test

    - name: Run tests with coverage
      run: make test-coverage

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GOEXPERIMENT: greenteagc
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25.x

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: GOEXPERIMENT=greenteagc go mod download

    - name: Install code generation tools
      run: GOEXPERIMENT=greenteagc go install github.com/atombender/go-jsonschema@latest

    - name: Install formatting tools
      run: GOEXPERIMENT=greenteagc go install golang.org/x/tools/cmd/goimports@latest

    - name: Run basic Go linting
      run: |
        GOEXPERIMENT=greenteagc go vet ./...
        GOEXPERIMENT=greenteagc go fmt ./...
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m
      env:
        GOEXPERIMENT: greenteagc

    - name: Install semgrep
      run: |
        python3 -m pip install semgrep

    - name: Install go-ruleguard
      run: |
        GOEXPERIMENT=greenteagc go install github.com/quasilyte/go-ruleguard/cmd/ruleguard@latest

    - name: Run semgrep-go
      run: |
        semgrep --config=.semgrep/semgrep-go --lang=go . || echo "semgrep completed with issues"

    - name: Run go-ruleguard
      run: |
        ruleguard -rules .ruleguard/rules.go ./... || echo "go-ruleguard completed with issues"